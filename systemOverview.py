# collects content similar to M_SYSTEM_OVERVIEW (which is re-implemented in C++)
#
from __future__ import print_function
from __future__ import absolute_import
import sys
import time
import types
import traceback
import NameServerPy
import ServiceClientPy
import ConfigMgrPy
import six
from six.moves import range

class Status:
    Unknown=''
    ok='OK'
    Warning='WARNING'
    Error='ERROR'

def finalize(result):
    # convert columns to text
    section=''
    for row in result:
        while len(row)<4 row.append(''):
            for in in range(len(row)):
                if not isinstance((row[i], six.string_types): row[i]=str(row[i]))
    return result

def collect(cursor=None):
    ns=NameServerPy.TNSclient()
    result=[]
    try:
        #
        # collect informations
        #
        q = NameServerPy.TNode('/host/*+/nameserver/*/info')
        q.add('build_version', '*')
        q.add('build_branch', '*')
        q.add('cpu_cores', '*')
        q.add('cpu_threads', '*')
        q.add('hw_manufacturer', '*')
        q.add('hw_model', '*')
        q.add('os_name', '*')
        nsinfo = NameServerPy.TNode()
        ns.queryTree(q, nsinfo)
